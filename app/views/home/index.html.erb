<br/>
<br/>

<table id="listingTable" class="table table-bordered">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">Symbol</th>
      <th scope="col">Price</th>
      <th scope="col">Volume</th>
    </tr>
  </thead>
  <tbody>
    <% for x in @coins['data'] %>
        <%# <% for coin in @my_coins %> <%# gioi han coin trong mang my_coins%> 
            <%# <% if coin == x['symbol'] %>  <%# search coin trong mang my_coins%>
            <tr>
                    <td><%= x['cmc_rank']%></td>
                    <td><button onclick="document.getElementById('overlay').style.display = 'block'"><%= x['name']%></button></td>
                    <td><%= x['symbol'] %></td>
                    <td>$<%= x['quote']['USD']['price']%></td>
                    <td><%= x['quote']['USD']['volume_24h']%></td>
            </tr>
            <%# <% end %>  
        <%# <% end %>  
      
    <% end %>
  </tbody>
</table>
<div class="row">
<button onclick="prevPage()" id="btn_prev" class="col btn btn-success">Prev</button>
<button onclick="nextPage()" id="btn_next" class="col btn btn-success">Next</button>
</div>




<div id="overlay" onclick="document.getElementById('overlay').style.display = 'none'"><%= x['name']%></div>



<container class="container">
    <cards class="cards">
        <bitcoin style="width: 30%" class="btc">
            <card class="asset-info">
                <div class="title">
                    <img src="https://s3.us-east-2.amazonaws.com/nomics-api/static/images/currencies/btc.svg" width="15%"> 
                    <h1>Bitcoin</h1>
                </div>
                <div class="details">
                    <h2 class="asset-price" id="btcPrice"></h2>
                </div>
            </card>
            <canvas id="btcChart"></canvas>
        </bitcoin>

        <!-- <cosmos style="width: 30%" class="cosmos">
            <card class="asset-info">
                <div class="title">
                    <img src="https://s3.us-east-2.amazonaws.com/nomics-api/static/images/currencies/atm.svg" width="15%"> 
                    <h1>Cosmos</h1>
                </div>
                <div class="details">
                    <h2 class="asset-price" id="atomPrice"></h2>
                </div>
            </card>
            <canvas id="cosmosChart"></canvas>
        </cosmos> -->

        <!-- <ethereum style="width: 30%" class="ethereum">
            <card class="asset-info">
                <div class="title">
                    <img src="https://s3.us-east-2.amazonaws.com/nomics-api/static/images/currencies/eth.svg" width="10%"> 
                    <h1>Ethereum</h1>
                </div>
                <div class="details">
                    <h2 class="asset-price" id="ethPrice"></h2>
                </div>
            </card>
            <canvas id="ethereumChart"></canvas>
        </ethereum> -->
    </cards>
  </container>
<script>
    var current_page = 1;
    var records_per_page = 10;
    var l = document.getElementById("listingTable").rows.length;

function prevPage() {
	if (current_page > 1) {
		current_page--;
		changePage(current_page);
	}
}

function nextPage() {
	if (current_page < numPages()) {
		current_page++;
		changePage(current_page);
	}
}

function changePage(page) {
	var btn_next = document.getElementById("btn_next");
	var btn_prev = document.getElementById("btn_prev");
	var listing_table = document.getElementById("listingTable");
	var page_span = document.getElementById("page");

	// Validate page
	if (page < 1) page = 1;
	if (page > numPages()) page = numPages();

	[...listing_table.getElementsByTagName("tr")].forEach((tr) => {
		tr.style.display = "none"; // reset all to not display
	});
	listing_table.rows[0].style.display = ""; // display the title row

	for (
		var i = (page - 1) * records_per_page + 1;
		i < page * records_per_page + 1;
		i++
	) {
		if (listing_table.rows[i]) {
			listing_table.rows[i].style.display = "";
		} else {
			continue;
		}
	}

	page_span.innerHTML = page + "/" + numPages();

	if (page == 1) {
		btn_prev.style.visibility = "hidden";
	} else {
		btn_prev.style.visibility = "visible";
	}

	if (page == numPages()) {
		btn_next.style.visibility = "hidden";
	} else {
		btn_next.style.visibility = "visible";
	}
}

function numPages() {
	return Math.ceil((l - 1) / records_per_page);
}

window.onload = function () {
	changePage(current_page);
};
//end pagination function



///  Calling API and modeling data for each chart ///
const btcData = async () => {
  const response = await fetch('https://min-api.cryptocompare.com/data/v2/histominute?fsym=BTC&tsym=USD&limit=119&api_key=0646cc7b8a4d4b54926c74e0b20253b57fd4ee406df79b3d57d5439874960146');
  const json = await response.json();
  const data = json.Data.Data
  const times = data.map(obj => obj.time)
  const prices = data.map(obj => obj.high)
  return {
    times,
    prices
  }
}



// const cosmosData = async () => {
//   const response = await fetch('https://min-api.cryptocompare.com/data/v2/histominute?fsym=ATOM&tsym=USD&limit=119&api_key=0646cc7b8a4d4b54926c74e0b20253b57fd4ee406df79b3d57d5439874960146');
//   const json = await response.json();
//   const data = json.Data.Data
//   const times = data.map(obj => obj.time)
//   const prices = data.map(obj => obj.high)
//   return {
//     times,
//     prices
//   }
// }


// const ethereumData = async () => {
//   const response = await fetch('https://min-api.cryptocompare.com/data/v2/histominute?fsym=ETH&tsym=USD&limit=119&api_key=0646cc7b8a4d4b54926c74e0b20253b57fd4ee406df79b3d57d5439874960146');
//   const json = await response.json();
//   const data = json.Data.Data
//   const times = data.map(obj => obj.time)
//   const prices = data.map(obj => obj.high)
//   return {
//     times,
//     prices
//   }
// }


/// Error handling ///
function checkStatus(response) {
  if (response.ok) {
    return Promise.resolve(response);
  } else {
    return Promise.reject(new Error(response.statusText));
  }
}



/// Charts ///
let createBtcChart
// let createCosmosChart
// let createethereumChart

async function printBtcChart() {
  let { times, prices } = await btcData()

  let btcChart = document.getElementById('btcChart').getContext('2d');

  let gradient = btcChart.createLinearGradient(0, 0, 0, 400);

  gradient.addColorStop(0, 'rgba(247,147,26,.5)');
  gradient.addColorStop(.425, 'rgba(255,193,119,0)');

  Chart.defaults.global.defaultFontFamily = 'Red Hat Text';
  Chart.defaults.global.defaultFontSize = 12;

  createBtcChart = new Chart(btcChart, {
    type: 'line',
    data: {
      labels: times,
      datasets: [{
        label: '$',
        data: prices,
        backgroundColor: gradient,
        borderColor: 'rgba(247,147,26,1)',
        borderJoinStyle: 'round',
        borderCapStyle: 'round',
        borderWidth: 3,
        pointRadius: 0,
        pointHitRadius: 10,
        lineTension: .2,
      }]
    },

    options: {
      title: {
        display: false,
        text: 'Heckin Chart!',
        fontSize: 35
      },

      legend: {
        display: false
      },

      layout: {
        padding: {
          left: 0,
          right: 0,
          top: 0,
          bottom: 0
        }
      },

      scales: {
        xAxes: [{
          display: false,
          gridLines: {}
        }],
        yAxes: [{
          display: false,
          gridLines: {}
        }]
      },

      tooltips: {
        callbacks: {
          //This removes the tooltip title
          title: function() {}
       },
        //this removes legend color
        displayColors: false,
        yPadding: 10,
        xPadding: 10,
        position: 'nearest',
        caretSize: 10,
        backgroundColor: 'rgba(255,255,255,.9)',
        bodyFontSize: 15,
        bodyFontColor: '#303030' 
      }
    }
  });
}



// async function printCosmosChart() {
//   let { times, prices } = await cosmosData()

//   let cosmosChart = document.getElementById('cosmosChart').getContext('2d');

//   let gradient = cosmosChart.createLinearGradient(0, 0, 0, 400);

//   gradient.addColorStop(0, 'rgba(27,30,54,.5)');
//   gradient.addColorStop(.425, 'rgba(46,49,72,0)');

//   Chart.defaults.global.defaultFontFamily = 'Red Hat Text';
//   Chart.defaults.global.defaultFontSize = 12;

//   createCosmosChart = new Chart(cosmosChart, {
//     type: 'line',
//     data: {
//       labels: times,
//       datasets: [{
//         label: "",
//         data: prices,
//         backgroundColor: gradient,
//         borderColor: 'rgba(46,49,72,1)',
//         borderJoinStyle: 'round',
//         borderCapStyle: 'round',
//         borderWidth: 3,
//         pointRadius: 0,
//         pointHitRadius: 10,
//         lineTension: .2,
//       }]
//     },

//     options: {
//       title: {
//         display: false,
//         text: 'Heckin Chart!',
//         fontSize: 35
//       },

//       legend: {
//         display: false
//       },

//       layout: {
//         padding: {
//           left: 0,
//           right: 0,
//           top: 0,
//           bottom: 0
//         }
//       },

//       scales: {
//         xAxes: [{
//           display: false,
//           gridLines: {}
//         }],
//         yAxes: [{
//           display: false,
//           gridLines: {}
//         }]
//       },

//       tooltips: {
//         callbacks: {
//           //This removes the tooltip title
//           title: function() {}
//        },
//         //this removes legend color
//         displayColors: false,
//         yPadding: 10,
//         xPadding: 10,
//         position: 'nearest',
//         caretSize: 10,
//         backgroundColor: 'rgba(255,255,255,.9)',
//         bodyFontSize: 15,
//         bodyFontColor: '#303030' 
//       }
//     }
//   });
// }


// async function printEthereumChart() {
//   let { times, prices } = await ethereumData()

//   let ethereumChart = document.getElementById('ethereumChart').getContext('2d');

//   let gradient = ethereumChart.createLinearGradient(0, 0, 0, 400);

//   gradient.addColorStop(0, 'rgba(78,56,216,.5)');
//   gradient.addColorStop(.425, 'rgba(118,106,192,0)');

//   Chart.defaults.global.defaultFontFamily = 'Red Hat Text';
//   Chart.defaults.global.defaultFontSize = 12;

//   createEthereumChart = new Chart(ethereumChart, {
//     type: 'line',
//     data: {
//       labels: times,
//       datasets: [{
//         label: '$',
//         data: prices,
//         backgroundColor: gradient,
//         borderColor: 'rgba(118,106,192,1)',
//         borderJoinStyle: 'round',
//         borderCapStyle: 'round',
//         borderWidth: 3,
//         pointRadius: 0,
//         pointHitRadius: 10,
//         lineTension: .2,
//       }]
//     },

//     options: {
//       title: {
//         display: false,
//         text: 'Heckin Chart!',
//         fontSize: 35
//       },

//       legend: {
//         display: false
//       },

//       layout: {
//         padding: {
//           left: 0,
//           right: 0,
//           top: 0,
//           bottom: 0
//         }
//       },

//       scales: {
//         xAxes: [{
//           display: false,
//           gridLines: {}
//         }],
//         yAxes: [{
//           display: false,
//           gridLines: {}
//         }]
//       },

//       tooltips: {
//         callbacks: {
//           //This removes the tooltip title
//           title: function() {}
//        },
//         //this removes legend color
//         displayColors: false,
//         yPadding: 10,
//         xPadding: 10,
//         position: 'nearest',
//         caretSize: 10,
//         backgroundColor: 'rgba(255,255,255,.9)',
//         bodyFontSize: 15,
//         bodyFontColor: '#303030' 
//       }
//     }
//   });
// }


// /// Update current price ///
// async function updateEthereumPrice() {
//   let { times, prices } = await ethereumData()
//   let currentPrice = prices[prices.length-1].toFixed(2);

//   document.getElementById("ethPrice").innerHTML = "$" + currentPrice;
// }

// async function updateCosmosPrice() {
//   let { times, prices } = await cosmosData()
//   let currentPrice = prices[prices.length-1].toFixed(2);

//   document.getElementById("atomPrice").innerHTML = "$" + currentPrice;
// }

async function updateBitcoinPrice() {
  let { times, prices } = await btcData()
  let currentPrice = prices[prices.length-1].toFixed(2);

  document.getElementById("btcPrice").innerHTML = "$" + currentPrice;
}

// updateEthereumPrice()
// updateCosmosPrice()
updateBitcoinPrice()

printBtcChart()
// printCosmosChart()
// printEthereumChart()

</script>

<style>
#overlay {
  color:white;
  position: fixed;
  display: none;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0,0,0,0.5);
  z-index: 2;
  cursor: pointer;
}

button {
  background: none!important;
  border: none;
  padding: 0!important;
  /*optional*/
  font-family: arial, sans-serif;
  /*input has OS specific font-family*/
  color: black;
  cursor: pointer;
}


h1 {
  font-size: 1.5em;
}

h2 {
  font-size: 1.25em;
}

h1,
h2,
p {
  font-family: "Red Hat Text", sans-serif;
  color: #303030;
}

.container {
  display: flex;
  justify-content: center;
}

cards {
  width: 90%;
  display: inline-flex;
  flex-direction: row;
  justify-content: space-between;
  flex-wrap: wrap;
  padding-top: 30px;
  padding-bottom: 30px;
}

.btc,
.cosmos,
.ethereum {
  display: grid;
  max-width: 300px;
  min-width: 250px;
  grid-template-columns: 1fr;
  grid-template-rows: minmax(50px, 60px) 1fr;
  grid-template: "info" "chart";
  border-radius: 30px;
}

.btc {
  box-shadow: 10px 10px 20px 1px rgba(247, 147, 26, 0.15);
}

.cosmos {
  box-shadow: 10px 10px 20px 1px rgba(46, 49, 72, 0.15);
}

.ethereum {
  box-shadow: 10px 10px 20px 1px rgba(78, 56, 216, 0.15);
}

.asset-info {
  grid-area: info;
  display: inline-flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 5% 0 5%;
}

.title {
  display: inline-flex;
}

card h1 {
  margin-left: 10px;
}

btcChart {
  grid-area: chart;
  border-radius: 0px 0px 30px 30px;
  margin-top: auto;
}

</style>